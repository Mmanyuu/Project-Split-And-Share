name: CI Workflow Develop Branch

on:
  push:
    branches:
      - develop               # Triggers. Gitaction will trigger when i git push develop branch only

jobs:
  
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Install Dependencies (Maven)
        run: mvn -B clean install -DskipTests
      - name: Upload Artifacts (if needed)
        if: always() # Always run this step, even if previous steps fail
        uses: actions/upload-artifact@v4
        with:
          name: target-${{ matrix.os }}
          path: target/*.jar
          retention-days: 1

  dependencies_scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Install Snyk CLI
        uses: snyk/actions/setup@master
      - name: Run Snyk Vulnerability Scan (Dependencies Only)
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --file=pom.xml --severity-threshold=high || echo "Issues detected but not failing the build"

  code_scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Install Snyk CLI
        uses: snyk/actions/setup@master
      - name: Run Snyk Code Vulnerability Scan
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk code test --severity-threshold=medium

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    needs: code_scan
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}
          path: target
      - name: Run Three Tests
        run: |
          export TEST_CLASSES="sg.edu.ntu.split_and_share.service.UserServiceImplTest,sg.edu.ntu.split_and_share.service.ExpenseServiceImplTest,sg.edu.ntu.split_and_share.controller.ExpenseControllerTest"
          mvn test -Dtest="$TEST_CLASSES"