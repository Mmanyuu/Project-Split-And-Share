version: 2.1

orbs:
  postgres: onehq/postgres@1.1.0
  docker: circleci/docker@2.3.0
  snyk: snyk/snyk@1.5.0

# Define Jobs
jobs:
  # Job to setup PostgreSQL service
  setup-postgresql:
    docker:
      - image: circleci/postgres:latest
        environment:
          POSTGRES_DB: split_and_share
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: $POSTGRES_PASSWORD
          # Assign the value of POSTGRES_PASSWORD
    steps:
      - checkout

  # Job to build and push Spring Boot App - Scan
  build-push-image:
    docker:
      - image: cimg/openjdk:17.0
      # circleci/openjdk:11-jdk
        environment:
          SPRING_PROFILES_ACTIVE: "ci"
          SPRING_DATASOURCE_URL: "jdbc:postgresql://localhost:5432/split_and_share"
          SPRING_DATASOURCE_USERNAME: "postgres"
          SPRING_DATASOURCE_PASSWORD: $SPRING_PASSWORD
          # Assign the value of SPRING_PASSWORD
    steps:
      - checkout  # Checkout the source code
      - setup_remote_docker
      - snyk/install
      - run: |
          snyk code test --all-projects
        # Skip Maven Test scan
      - run:
          name: Install dependencies
          command: |
            ./mvnw clean install -DskipTests
           # Assumes you are using Maven
      - run:
          name: Run tests
          command: |
            ./mvnw test  
          # Run the tests
      - run:
          name: Build Spring Boot JAR
          command: ./mvnw clean package -DskipTests
      - run:
          name: Build Docker image for Spring Boot
          command: |
            docker build -t $DOCKER_USERNAME/splitandshare-app:latest .
      - run:
          name: Login to Docker Hub
          command: |
            echo $DOCKER_PASSWORD | docker login --username $DOCKER_LOGIN --password-stdin
      - run:
          name: Push Docker image to Docker Hub
          command: |
            docker push $DOCKER_USERNAME/splitandshare-app:latest

  # Job to Deploy Spring Boot App to Heroku
  # deploy:
  #   docker:
  #     - image: cimg/node:16.10
  #   steps:
  #     - setup_remote_docker      
  #     - heroku/install
  #     - checkout
  #     - run:
  #         name: Heroku Container Push
  #         command: | 
  #           heroku container:login
  #           heroku container:push web -a johnny-su-devops
  #           heroku container:release web -a johnny-su-devops

# Define workflows
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - setup-postgresql
      - build-push-image:
          requires:
            - setup-postgresql
      # - deploy
      #     requires:
      #       - build-push-image